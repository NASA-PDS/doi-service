# üèÉ‚Äç‚ôÄÔ∏è Continuous Integration and Delivery: Branch Testing
# ======================================================


---

name: üîÅ Branch integration testing


# Driving Event
# -------------
#
# What event starts this workflow: a push to any branch other than main

on:
    push:
        branches:
            -   '**'
            -   '!main'
    workflow_dispatch:


# What to Do
# ----------
#
# Test the software with tox

jobs:
    branch-testing:
        name: ü™µ Branch Testing
        runs-on: ubuntu-latest
        if: github.actor != 'pdsen-ci'
        strategy:
            matrix:
                python-version: ['3.12', '3.13']

        steps:
            -
                name: üí≥ Checkout
                uses: actions/checkout@v5
                with:
                    lfs: true
                    fetch-depth: 0
                    token: ${{secrets.ADMIN_GITHUB_TOKEN}}
            -
                name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v6
                with:
                    python-version: ${{ matrix.python-version }}
            -
                name: üíµ Python Cache
                uses: actions/cache@v4
                with:
                    path: ~/.cache/pip
                    # The "key" used to indicate a set of cached files is the operating system runner
                    # plus "py" for Python-specific builds, plus a hash of the wheels, plus "pds" because
                    # we pds-prefix everything with "pds" in PDS! üòÖ
                    key: pds-${{runner.os}}-py-${{hashFiles('**/*.whl')}}
                    # To restore a set of files, we only need to match a prefix of the saved key.
                    restore-keys: pds-${{runner.os}}-py-

            -
                name: ü©∫ Test Software
                run:
                    pip install --editable '.[dev]'

                    tox
                shell: bash
                env:
                    DATACITE_USER: ${{secrets.DATACITE_USER}}
                    DATACITE_PASSWORD: ${{secrets.DATACITE_PASSWORD}}

    branch-testing-windows:
        name: üò¥ Branch Testing on Windoze
        runs-on: windows-latest
        if: github.actor != 'pdsen-ci'
        strategy:
            matrix:
                python-version: ['3.12', '3.13']

        steps:
            -
                name: üí≥ Checkout
                uses: actions/checkout@v5
                with:
                    lfs: true
                    fetch-depth: 0
                    token: ${{secrets.ADMIN_GITHUB_TOKEN}}
            -
                name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v6
                with:
                    python-version: ${{ matrix.python-version }}

            -
                name: ü©∫ Test Software
                run:
                    pip install --editable '.[dev]'

                    tox
                shell: bash
                env:
                    DATACITE_USER: ${{secrets.DATACITE_USER}}
                    DATACITE_PASSWORD: ${{secrets.DATACITE_PASSWORD}}
